/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}
group ='gradlep'
version ='1.0-SNAPSHOT'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    // This dependency is used by the application.
    implementation libs.guava
    implementation 'org.slf4j:slf4j-simple:2.0.16'
    implementation 'io.javalin:javalin:6.7.0'
    implementation"com.fasterxml.jackson.core:jackson-databind:2.17.2"
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.7'

    // iText PDF
    implementation 'com.itextpdf:itextpdf:5.5.13.3'

    // JFreeChart y jcommon compatibles
    implementation 'org.jfree:jfreechart:1.5.3'
    implementation 'org.jfree:jcommon:1.0.23'



}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'gradlep.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
